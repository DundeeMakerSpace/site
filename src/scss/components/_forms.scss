// Forms
//
// Covers styles used for forms, such as the `<input>` and `<select>`
// elements.
//
// Styleguide 2

@include scut-reset-form;
@include scut-reset-pointer;
@include scut-reset-button;

// Fixing something with normalize
input[type=search] {
    box-sizing: border-box;
}

@mixin input-structure($input-border-radius: $input-border-radius, $input-font-size: $input-font-size, $input-padding-vertical: $input-padding-vertical, $input-padding-horizontal: $input-padding-horizontal) {
    display: inline-block;
    border-radius: $input-border-radius;
    font-size: $input-font-size;
    padding: $input-padding-vertical $input-padding-horizontal;
    // line-height: 1.2;
}

@mixin tp-input {
    max-width: 100%;
    @include input-structure();
    color: $input-c;
    background-color: $input-bg;
    border: none;
    border-bottom: $input-border;
    box-shadow: none;
    // box-shadow: inset 0 0 .6em rgba(0,0,0,.07);
    transition: all $transition-fast;
    outline: none;
    font-weight: normal;
    vertical-align: bottom;

    &:hover {
        color: $input-c--hover;
        background-color: $input-bg--hover;
        border-bottom: $input-border--hover;
        // box-shadow: 0 0 .1em inset rgba(0,0,0,.3);
    }

    &:focus,
    &:active {
        color: $input-c--active;
        background-color: $input-bg--active;
        border-bottom: $input-border--active;
        // box-shadow: 0 0 .2em rgba(0,0,0,.3);
    }
}

%input {
  @include tp-input();
}

@mixin tp-button {
    max-width: 100%;
    text-align: center;
    @include input-structure();
    background-color: $button-bgc;
    border: $button-border;
    color: $button-c;
    box-shadow: none;
    text-shadow: none;
    font-weight: bold;
    text-decoration: none;
    transition: background $transition-fast, border $transition-fast, color $transition-fast;

    &:hover,
    &:focus {
      background-color: $button-bgc--hover;
      border: $button-border--hover;
      color: $button-c--hover;
    }

    &:active {
      background-color: $button-bgc--active;
      border: $button-border--active;
      color: $button-c--active;
      transform: translate(1px 1px);
    }
}

%button {
  @include tp-button();
}

// General input styles
//
// : - Stardard style
// :hover - Simple hover style
// :focus - Focus and active styles
// :active - Focus and active styles
//
// markup:
// <input class="{$modifiers}" />
// <select class="{$modifiers}">
//     <option>Option</option>
// </select>
// <textarea class="{$modifiers}"></textarea>
// <input type="checkbox" />
//
// Styleguide 2.1
input,
select,
textarea {
	@extend %input;
}

// Select fields
select {
    appearance: none;
    padding-right: $input-padding-horizontal + 1.5em;
    background-position: right $input-padding-horizontal center;
    background-repeat: no-repeat;
    background-size: .75em auto;
    background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="8" height="8" viewBox="0 0 8 8"><path fill="#{$input-c}" d="M0 0l4 4 4-4h-8z" transform="translate(0 2)" /></svg>');
}

// Radio buttons
$radio-size: 1.5em;
$radio-inner-size: .7em;
input[type="radio"] {
    display: inline-block;
    border-radius: 50%;
    cursor: pointer;
    height: $radio-size;
    margin-right: .2em;
    position: relative;
    width: $radio-size;
    appearance: none;
    border: none;

    &:hover,
    &:focus,
    &:active {
        background-color: $input-bg--active;
    }
}
input[type="radio"]:after {
    content: '';
    display: block;
    position: relative;
    border-radius: 50%;
    background-color: darken($input-bg, 40%);
    height: $radio-inner-size;
    width: $radio-inner-size;
    left: ($radio-size - $radio-inner-size) / 2;
    top: ($radio-size - $radio-inner-size) / 2;
}
input[type="radio"]:checked:after {
    background-color: $link-c;
}

// Checkboxes
$checkbox-size: 1.5em;
input[type="checkbox"] {
    display: inline-block;
    cursor: pointer;
    height: $checkbox-size;
    margin-right: .2em;
    position: relative;
    width: $checkbox-size;
    appearance: none;
    text-align: center;
    border: none;

    &:hover,
    &:focus,
    &:active {
        color: $input-c--active;
        background-color: $input-bg--active;
    }
}
input[type="checkbox"]:after {
    content: " ";
    display: block;
    line-height: $checkbox-size;
}
input[type="checkbox"]:checked:after {
    content: "âœ”";
}

// Buttons
//
// : - Standard style
// :hover - Simple hover style
// :focus - Focus style
// :active - Active style
//
// markup:
// <button class="button {$modifiers}">Button</button>
//
// Styleguide 2.2
button,
.button,
input[type=submit],
input[type=button] {
    @extend %button;
}

// Ninjaforms extras.
.nf-form-cont {
    .nf-error .ninja-forms-field {
        border: none;
        border-bottom: $input-border;
        border-color: $error-c;
    }

    .ninja-forms-req-symbol,
    .nf-error-msg {
        color: $error-c;
    }

    .nf-error-msg {
        @include tp-leader(.25);
        @include tp-fs(-1);
    }

    .nf-response-msg {
        @extend .block;
        @extend .block--banner;
        @include tp-space(padding, 1);
        &:empty {
            display: none;
        }
    }
}
